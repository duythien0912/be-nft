[{"/Users/mac/Desktop/hackathon/bsc-coupon/src/index.js":"1","/Users/mac/Desktop/hackathon/bsc-coupon/src/App.js":"2","/Users/mac/Desktop/hackathon/bsc-coupon/src/web3/init.js":"3","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/history.js":"4","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/CreateCoupon.js":"5","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/Main.js":"6","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/Header.js":"7","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/ViewCoupon.js":"8","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/Faucet.js":"9","/Users/mac/Desktop/hackathon/bsc-coupon/src/web3/config.js":"10","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/AlertModal.js":"11","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/SuccessModal.js":"12","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/Loading.js":"13","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/DisplayTickets.js":"14","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/BuyTicket.js":"15","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/Claim.js":"16","/Users/mac/Desktop/hackathon/bsc-coupon/src/web3/time.js":"17","/Users/mac/Desktop/hackathon/bsc-coupon/src/web3/precision.js":"18","/Users/mac/Desktop/hackathon/bsc-coupon/src/api/getBnbUsdt.js":"19","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/music/musicBlock.js":"20","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/image/imageBlock.js":"21","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/video/videoBlock.js":"22","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/flow/flowBlock.js":"23","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/music/playListBlock.js":"24","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/music/musicTable.js":"25","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/market/marketPage.js":"26","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/account/accountPage.js":"27","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/CreateNft.js":"28"},{"size":363,"mtime":1621682100021,"results":"29","hashOfConfig":"30"},{"size":1288,"mtime":1621870069872,"results":"31","hashOfConfig":"30"},{"size":1532,"mtime":1621750067026,"results":"32","hashOfConfig":"30"},{"size":93,"mtime":1621608591880,"results":"33","hashOfConfig":"30"},{"size":15464,"mtime":1621608591879,"results":"34","hashOfConfig":"30"},{"size":6271,"mtime":1621923413433,"results":"35","hashOfConfig":"30"},{"size":6007,"mtime":1621849237054,"results":"36","hashOfConfig":"30"},{"size":14210,"mtime":1621666179386,"results":"37","hashOfConfig":"30"},{"size":4570,"mtime":1621608591879,"results":"38","hashOfConfig":"30"},{"size":352,"mtime":1621921318810,"results":"39","hashOfConfig":"30"},{"size":534,"mtime":1621608591878,"results":"40","hashOfConfig":"30"},{"size":643,"mtime":1621608591880,"results":"41","hashOfConfig":"30"},{"size":382,"mtime":1621734181176,"results":"42","hashOfConfig":"30"},{"size":1334,"mtime":1621608591879,"results":"43","hashOfConfig":"30"},{"size":6486,"mtime":1621608591879,"results":"44","hashOfConfig":"30"},{"size":5049,"mtime":1621608591879,"results":"45","hashOfConfig":"30"},{"size":838,"mtime":1621665548570,"results":"46","hashOfConfig":"30"},{"size":351,"mtime":1621665553255,"results":"47","hashOfConfig":"30"},{"size":497,"mtime":1621671077844,"results":"48","hashOfConfig":"30"},{"size":592,"mtime":1621731340919,"results":"49","hashOfConfig":"30"},{"size":741,"mtime":1621733668641,"results":"50","hashOfConfig":"30"},{"size":663,"mtime":1621732958275,"results":"51","hashOfConfig":"30"},{"size":1498,"mtime":1621730116256,"results":"52","hashOfConfig":"30"},{"size":800,"mtime":1621818930434,"results":"53","hashOfConfig":"30"},{"size":1400,"mtime":1621819175004,"results":"54","hashOfConfig":"30"},{"size":2337,"mtime":1621869874227,"results":"55","hashOfConfig":"30"},{"size":3578,"mtime":1621921936687,"results":"56","hashOfConfig":"30"},{"size":13890,"mtime":1621923358982,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1l8faqw",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/Desktop/hackathon/bsc-coupon/src/index.js",[],["120","121"],"/Users/mac/Desktop/hackathon/bsc-coupon/src/App.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/web3/init.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/history.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/CreateCoupon.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/Main.js",["122","123","124","125"],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/Header.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/ViewCoupon.js",["126"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport history from \"./history\";\nimport Loading from \"./Loading\";\nimport AlertModal from \"./AlertModal\";\nimport SuccessModal from \"./SuccessModal\";\nimport { precision } from \"../web3/precision\";\nimport { time } from \"../web3/time\";\nimport * as erc20Abi from \"../abis/erc20Abi.json\";\nimport * as distCouponAbi from \"../abis/distCoupon.json\";\nimport { Card, Row, Col, Image, Button, CardDeck } from \"react-bootstrap\";\nimport BuyTicket from \"./BuyTicket\";\nimport DisplayTickets from \"./DisplayTickets\";\nimport Claim from \"./Claim\";\n\nexport default function ViewPool() {\n  let routes;\n  const BNB = \"0x2B8fF854c5e16cF35B9A792390Cc3a2a60Ec9ba2\";\n  const USDC = \"0x65471bdCDb3720Dc07B914756884b50a2b4395fb\";\n  const { couponAddress, nftToken, buyToken } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  let [erc20Instance, setErc20Instance] = useState();\n  let [contractInstance, setContractInstance] = useState();\n  const [state, setState] = useState({\n    totalTicket: 0,\n    ticketPrice: 0,\n    distInterval: 0,\n    distCount: 0,\n    couponStartTimestamp: 0,\n    ticketBuyEndTime: 0,\n    nextDistStartTime: 0,\n    nftBalance: 0,\n    tickets: [],\n    couponResult: 0,\n    tokenBaseURI: \"\",\n    isWinnerTicket: false,\n    couponWinnerAddr: \"\",\n    erc20Balance: 0,\n  });\n  const [successModal, setSuccessModal] = useState({\n    msg: \"\",\n    open: false,\n  });\n  const [errorModal, setErrorModal] = useState({\n    msg: \"\",\n    open: false,\n  });\n  const [showBuyTicket, setShowBuyTicket] = useState(false);\n  const [showMetamaskError, setShowMetamaskError] = useState(false);\n\n  const fetchContractData = async () => {\n    try {\n      if (!loading) setLoading(true);\n\n      let result;\n      if (!contractInstance) {\n        result = await createContractInstance();\n      }\n\n      contractInstance = contractInstance ? contractInstance : result.contract;\n      erc20Instance = erc20Instance ? erc20Instance : result.erc20;\n\n      if (contractInstance) {\n        setShowBuyTicket(false);\n\n        const totalTicket = await contractInstance.methods\n          .ticketNumber()\n          .call();\n\n        const ticketPrice = await contractInstance.methods.ticketPrice().call();\n\n        const distInterval = await contractInstance.methods\n          .distInterval()\n          .call();\n\n        const distCount = await contractInstance.methods.distCount().call();\n\n        const couponStartTimestamp = await contractInstance.methods\n          .couponStartTime()\n          .call();\n\n        const ticketBuyEndTime = await contractInstance.methods\n          .ticketBuyEndTime()\n          .call();\n\n        const nextDistStartTime = await contractInstance.methods\n          .getNextDistTimestamp()\n          .call();\n\n        const nftBalance = await contractInstance.methods\n          .balanceOf(window.userAddress)\n          .call();\n\n        const tokenBaseURI = await contractInstance.methods.baseURI().call();\n\n        let couponResult = 0,\n          couponWinnerAddr = \"\";\n        if (\n          Number(distCount) === Number(totalTicket) - 1 &&\n          time.currentUnixTime() > Number(ticketBuyEndTime)\n        ) {\n          couponResult = await contractInstance.methods.getFinalResult().call();\n\n          couponWinnerAddr = await contractInstance.methods\n            .getCouponWinner()\n            .call();\n        }\n\n        let tickets = [],\n          isWinnerTicket = false;\n        for (let i = 0; i < nftBalance; i++) {\n          const ticketNumber = await contractInstance.methods\n            .tokenOfOwnerByIndex(window.userAddress, i)\n            .call();\n\n          const isValid = await contractInstance.methods\n            .stillValidTicket(ticketNumber)\n            .call();\n\n          tickets.push({ ticketNumber, isValid });\n\n          if (Number(couponResult) === Number(ticketNumber)) {\n            isWinnerTicket = true;\n          }\n        }\n\n        let erc20Balance = await precision.remove(\n          await erc20Instance.methods.balanceOf(window.userAddress).call(),\n          await erc20Instance.methods.decimals().call()\n        );\n\n        console.log(\"fd\", window.userAddress + \"/\" + erc20Balance);\n\n        setState({\n          totalTicket,\n          ticketPrice,\n          distInterval,\n          distCount,\n          couponStartTimestamp,\n          ticketBuyEndTime,\n          nextDistStartTime,\n          nftBalance,\n          tickets,\n          couponResult,\n          tokenBaseURI,\n          isWinnerTicket,\n          couponWinnerAddr,\n          erc20Balance,\n        });\n\n        setLoading(false);\n      }\n    } catch (error) {\n      setErrorModal({\n        open: true,\n        msg: error.message,\n      });\n    }\n  };\n\n  const createContractInstance = () => {\n    return new Promise((resolve, reject) => {\n      try {\n        const contract = new window.web3.eth.Contract(\n          distCouponAbi.default,\n          couponAddress,\n          { from: window.userAddress }\n        );\n\n        const erc20 = new window.web3.eth.Contract(\n          erc20Abi.default,\n          buyToken === \"BNB\" ? BNB : USDC,\n          { from: window.userAddress }\n        );\n\n        console.log(\"dss\", erc20);\n\n        setErc20Instance(erc20);\n        setContractInstance(contract);\n        resolve({ contract, erc20 });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n\n  const handleDist = () => {\n    contractInstance.methods\n      .dist(generateRandom())\n      .send()\n      .on(\"transactionHash\", () => {\n        setProcessing(true);\n      })\n      .on(\"receipt\", () => {\n        setProcessing(false);\n        fetchContractData();\n      })\n      .catch((error) => {\n        setProcessing(false);\n        setErrorModal({\n          open: true,\n          msg: error.message,\n        });\n      });\n  };\n\n  const generateRandom = () => {\n    return Math.floor(Math.random() * 10 ** 15);\n  };\n\n  const getTokenSymbol = () => {\n    return buyToken === \"BNB\" ? \"BNB\" : \"USDC\";\n  };\n\n  useEffect(() => {\n    if (\n      typeof window.ethereum === \"undefined\" ||\n      !window.ethereum.isConnected() ||\n      !window.ethereum.selectedAddress\n    ) {\n      setLoading(false);\n      setShowMetamaskError(true);\n    }\n\n    if (\n      typeof window.ethereum !== \"undefined\" &&\n      window.ethereum.selectedAddress &&\n      window.ethereum.isConnected()\n    ) {\n      fetchContractData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading) {\n    routes = <Loading />;\n  } else {\n    routes = (\n      <div>\n        {showMetamaskError ? (\n          <AlertModal\n            open={showMetamaskError}\n            toggle={() => {\n              setShowMetamaskError(false);\n              history.push(\"/\");\n            }}\n          >\n            <div>\n              {typeof window.ethereum === \"undefined\" ? (\n                <div>You can't use these features without Metamask.</div>\n              ) : (\n                <div>Please connect to Metamask to use this feature !!</div>\n              )}\n            </div>\n          </AlertModal>\n        ) : (\n          <CardDeck>\n            <Card className=\"hidden-card\"></Card>\n\n            <Card className=\"mx-auto view-pool-card\">\n              <Card.Body style={{ textAlign: \"left\", fontWeight: \"bold\" }}>\n                <p className=\"view-pool-header\">\n                  <u>Distribution Coupon</u>\n                </p>\n\n                <Row style={{ paddingBottom: \"20px\" }}>\n                  <Col>\n                    <u>Total Tickets</u>\n                    <span> :</span>\n                    <span className=\"float-right\">{state.totalTicket}</span>\n                  </Col>\n\n                  <Col>\n                    <u>Ticket Price</u>\n                    <span> :</span>\n                    <span className=\"float-right\">\n                      <span>{state.ticketPrice} </span>\n                      {getTokenSymbol()}\n                    </span>\n                  </Col>\n                </Row>\n\n                <Row style={{ paddingBottom: \"20px\" }}>\n                  <Col>\n                    <u>Distribution Complete</u>\n                    <span> :</span>\n                    <span className=\"float-right\">{state.distCount}</span>\n                  </Col>\n\n                  <Col>\n                    <u>NFT Token</u>\n                    <span> :</span>\n                    <span className=\"float-right\">\n                      {state.tokenBaseURI !== \"\" ? (\n                        <a\n                          target=\"_blank\"\n                          href={state.tokenBaseURI}\n                          rel=\"noreferrer noopener\"\n                        >\n                          {nftToken}\n                        </a>\n                      ) : (\n                        <div>{nftToken}</div>\n                      )}\n                    </span>\n                  </Col>\n                </Row>\n\n                {Number(state.nextDistStartTime) > time.currentUnixTime() ? (\n                  <Row className=\"text-center\">\n                    <Col>\n                      <u>Next Distribution In</u>\n                      <span> : </span>\n                      <span>\n                        {time.getRemainingTime(state.nextDistStartTime)}\n                      </span>\n                    </Col>\n                  </Row>\n                ) : Number(state.distCount) === Number(state.totalTicket) - 1 &&\n                  Number(state.distCount) > 0 ? (\n                  <div>\n                    <div className=\"auction-alert-message\">\n                      Token Already Closed\n                    </div>\n                    <div className=\"auction-info-message\">\n                      Result: {state.tokenResult}\n                    </div>\n                  </div>\n                ) : null}\n\n                {time.currentUnixTime() > Number(state.nextDistStartTime) &&\n                Number(state.distCount) < Number(state.totalTicket) - 1 ? (\n                  <Row className=\"text-center\">\n                    <Col>\n                      <Button variant=\"info\" onClick={handleDist}>\n                        {processing ? (\n                          <div className=\"d-flex align-items-center\">\n                            Processing\n                            <span className=\"loading ml-2\"></span>\n                          </div>\n                        ) : (\n                          <div>Execute Distribution</div>\n                        )}\n                      </Button>\n\n                      <div className=\"info-message\">\n                        You will get {Number(state.ticketPrice) / 100}{\" \"}\n                        {getTokenSymbol()}\n                        <span> for executing this distribution.</span>\n                      </div>\n                    </Col>\n                  </Row>\n                ) : null}\n\n                {state.nftBalance > 0 ? (\n                  <DisplayTickets\n                    nftBalance={state.nftBalance}\n                    tickets={state.tickets}\n                  />\n                ) : null}\n\n                {showBuyTicket ? (\n                  <BuyTicket\n                    couponAddress={couponAddress}\n                    contractInstance={contractInstance}\n                    erc20Instance={erc20Instance}\n                    buyToken={buyToken === \"BNB\" ? \"BNB\" : \"USDC\"}\n                    availableBalance={state.erc20Balance}\n                    balanceNeeded={state.ticketPrice}\n                    callback={fetchContractData}\n                  />\n                ) : null}\n\n                {Number(state.isWinnerTicket) !== 0 ? (\n                  <Claim\n                    couponAddress={couponAddress}\n                    contractInstance={contractInstance}\n                    ticketNumber={state.couponResult}\n                    callback={fetchContractData}\n                  />\n                ) : Number(state.distCount) === Number(state.totalTicket) - 1 &&\n                  Number(state.distCount) > 0 &&\n                  Number(state.nftBalance) > 0 ? (\n                  state.couponWinnerAddr === window.userAddress ? (\n                    <div className=\"info-message\">\n                      You have already claimed your coupon for ticket number{\" \"}\n                      {state.couponResult}\n                    </div>\n                  ) : null\n                ) : Number(state.nftBalance) > 0 &&\n                  Number(state.distCount) > 0 &&\n                  Number(state.distCount) === Number(state.totalTicket) - 1 ? (\n                  <div className=\"info-message\">\n                    You don't have winner ticket.\n                  </div>\n                ) : null}\n              </Card.Body>\n\n              {time.currentUnixTime() < Number(state.ticketBuyEndTime) ? (\n                <Card.Footer className=\"view-pool-footer\">\n                  <Button\n                    onClick={() => setShowBuyTicket(true)}\n                    variant=\"success\"\n                  >\n                    {state.nftBalance > 0 ? (\n                      <div>Buy More Ticket</div>\n                    ) : (\n                      <div>Want to Buy Ticket ?</div>\n                    )}\n                  </Button>\n                </Card.Footer>\n              ) : Number(state.nftBalance) === 0 ? (\n                <div className=\"alert-message\">Participation time over.</div>\n              ) : (\n                <div style={{ marginBottom: \"20px\" }}></div>\n              )}\n            </Card>\n\n            <Card className=\"hidden-card\"></Card>\n          </CardDeck>\n        )}\n\n        <AlertModal\n          open={errorModal.open}\n          toggle={() =>\n            setErrorModal({\n              ...errorModal,\n              open: false,\n            })\n          }\n        >\n          {errorModal.msg}\n        </AlertModal>\n\n        <SuccessModal\n          open={successModal.open}\n          toggle={() =>\n            setSuccessModal({\n              ...successModal,\n              open: false,\n            })\n          }\n        >\n          {successModal.msg}\n        </SuccessModal>\n      </div>\n    );\n  }\n\n  return routes;\n}\n","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/Faucet.js",["127"],"import React, { useEffect, useState } from \"react\";\nimport Loading from \"./Loading\";\nimport AlertModal from \"./AlertModal\";\nimport SuccessModal from \"./SuccessModal\";\nimport { Button, Card, CardDeck } from \"react-bootstrap\";\n\nexport default function Faucet() {\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n\n  const [errorModal, setErrorModal] = useState({\n    msg: \"\",\n    open: false\n  });\n  const [successModal, setSuccessModal] = useState({\n    msg: \"\",\n    open: false\n  });\n  const [tokens] = useState([\n    {\n      name: \"BNB\",\n      address: \"0x2B8fF854c5e16cF35B9A792390Cc3a2a60Ec9ba2\",\n      status: false\n    }, {\n      name: \"USDC\",\n      address: \"0x65471bdCDb3720Dc07B914756884b50a2b4395fb\",\n      status: false\n    }\n  ]);\n\n  const handleGetTestTokens = (tokenAddress) => {\n    window.tokenFaucet.methods\n      .claimTestTokens(tokenAddress)\n      .send()\n      .on('transactionHash', () => {\n        setProcessing(true);\n      })\n      .on('receipt', (_) => {\n        setProcessing(false);\n      })\n      .catch((error) => {\n        setProcessing(false);\n        setErrorModal({\n          open: true,\n          msg: error.message,\n        });\n      });\n  }\n\n  const checkIsAlreadyClaimed = () => {\n    tokens.forEach(async (token, i) => {\n      console.log('ff', token.address)\n      const status = await window.tokenFaucet\n        .methods.alreadyClaimed(\n          window.userAddress,\n          token.address,\n        ).call();\n\n      tokens[i].status = status;\n\n      if (i === tokens.length - 1) {\n        setLoading(false);\n      }\n    });\n  }\n\n  useEffect(() => {\n    checkIsAlreadyClaimed();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\nif (loading) {\n  return <Loading />\n};\n\nreturn (\n  <div>\n    <CardDeck>\n      <Card className=\"hidden-card\"></Card>\n        <Card className=\"view-pool-card\">\n          <Card.Header>\n            <u>Token Faucet</u>\n          </Card.Header>\n\n          <Card.Body>\n            <div style={{ marginBottom: \"30px\" }}>\n              <strong>If you want to get token</strong>\n                <br />Please use <a\n                    target=\"_blank\"                    \n                    href=\"https://testnet.binance.org/faucet-smart\"\n                    style={{ fontWeight: \"bold\" }}\n                > Faucet </a>                \n            </div>\n\n            {tokens.map((token, key) => (\n              <Card\n                key={key}\n                className=\"mx-auto form-card text-center\"\n                style={{\n                    backgroundColor: \"rgb(253, 255, 255)\",\n                    marginTop: \"4%\",\n                    marginBottom: \"4%\"\n                }}>\n                <Card.Header>\n                  <u>{token.name} Faucet</u>\n                </Card.Header>\n\n                {!token.status ?\n                  <Card.Body>\n                    <p>\n                      You can get Test <strong>{token.name} </strong>\n                    </p>\n                    <Button\n                      style={{ marginTop: '10px' }}\n                      variant=\"success\"\n                      onClick={() =>\n                        handleGetTestTokens(token.address)\n                      }\n                    >\n                    {processing ?\n                      <div className=\"d-flex align-items-center\">\n                        Processing\n                        <span className=\"loading ml-2\"></span>\n                      </div>\n                        :\n                      <div>\n                        GET 100 {token.name}\n                      </div>\n                    }\n                    </Button>\n                  </Card.Body>\n                  :\n                  <Card.Body>\n                    <p style={{ color: \"gray\" }}>\n                      You have already claimed your 100 {token.name}.\n                    </p>                    \n                  </Card.Body>\n                  }\n                </Card>\n              ))}\n            </Card.Body>\n          </Card>\n\n          <Card className=\"hidden-card\"></Card>\n        </CardDeck>\n\n\n        <AlertModal\n          open={errorModal.open}\n          toggle={() => setErrorModal({\n            ...errorModal, open: false\n          })}\n        >\n          {errorModal.msg}\n        </AlertModal>\n\n        <SuccessModal\n          open={successModal.open}\n          toggle={() => setSuccessModal({\n            ...successModal, open: false\n          })}\n        >\n          {successModal.msg}\n        </SuccessModal>\n      </div >\n  );\n}\n","/Users/mac/Desktop/hackathon/bsc-coupon/src/web3/config.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/AlertModal.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/SuccessModal.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/Loading.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/DisplayTickets.js",["128"],"import React from \"react\";\n\nimport { Row, Col, Card, Image } from \"react-bootstrap\";\n\nexport default function DisplayTickets({\n    nftBalance,\n    tickets,\n}) {\n    return (\n        <Card\n            className=\"mx-auto form-card text-center\"\n            style={{ backgroundColor: \"rgb(253, 255, 255)\" }}\n        >\n            <Card.Header>\n                <u>Your Tickets</u>\n            </Card.Header>\n\n            <Card.Body>\n                <div style={{ marginBottom: \"20px\", color: \"green\", fontSize: \"large\" }}>\n                    You have {nftBalance} Tickets\n                </div>\n\n                {tickets.map((ticket, key) => (\n                    <Row key={key} className=\"text-center\" style={{ paddingBottom: \"20px\" }}>\n                        <Col>\n                            <u>Ticket Number</u>\n                            <span> : </span>\n                            <span>{ticket.ticketNumber}</span>\n                        </Col>\n                        <Col>\n                            <u>Still Valid</u>\n                            <span> : </span>\n                            {ticket.isValid ?\n                                    'yes' :\n                                    'no'}\n                        </Col>\n                    </Row>\n                ))}\n            </Card.Body>\n        </Card>\n    );\n}\n","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/BuyTicket.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/Claim.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/web3/time.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/web3/precision.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/api/getBnbUsdt.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/music/musicBlock.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/image/imageBlock.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/video/videoBlock.js",["129","130"],"import { Col, Image, Row } from \"react-bootstrap\";\n\nimport FlowBlock from '../flow/flowBlock'\n\nexport default function VideoBlock() {\n  const imgSrc = \"/cover.jpeg\";\n\n  return (\n    <Col className=\"\">\n      {[1, 2, 3].map((val) => (\n        <Row className=\"mb-4 fadein\">\n          <Col xs>\n          <FlowBlock/>\n          </Col>\n          <Col xs>\n          <FlowBlock/>\n          </Col>\n          <Col xs>\n          <FlowBlock/>\n          </Col>\n          {/* <Col>\n            <Image src={imgSrc} rounded fluid />\n          </Col>\n          <Col>\n            <Image src={imgSrc} rounded fluid />\n          </Col> */}\n        </Row>\n      ))}\n    </Col>\n  );\n}\n","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/flow/flowBlock.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/music/playListBlock.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/music/musicTable.js",["131","132"],"import { Col, Image, Row, Table } from \"react-bootstrap\";\n\nexport default function MusicTable() {\n  const imgSrc = \"/cover.jpeg\";\n\n  return (\n    <>\n      <Table\n        className=\"music-table ml-2 mr-2\"\n        borderless={true}\n        bordered={false}\n        striped={false}\n        variant=\"dark\"\n      >\n        <thead>\n          <tr>\n            <th className=\"number-col caption\">#</th>\n            <th className=\"caption\"></th>\n            <th className=\"caption\">TITLE</th>\n            <th className=\"caption\">ARTIST</th>\n            <th className=\"caption\">ALBUM</th>\n            <th className=\"caption time-col\">TIME</th>\n            {/* <th className=\"caption\"></th> */}\n          </tr>\n        </thead>\n        <tbody>\n          {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16].map((item) => (\n            <tr>\n              <td className=\"number-col caption\">{item}</td>\n              <td className=\"logo-col\">\n                <Image\n                  className=\"music-icon mr-2 fadein\"\n                  src={imgSrc}\n                  rounded\n                  fluid\n                />\n              </td>\n              <td>Bicycle Race</td>\n              <td>Queen</td>\n              <td className=\"caption\">The Dark Side of the Moon</td>\n              <td className=\"caption time-col\">6:22</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n}\n","/Users/mac/Desktop/hackathon/bsc-coupon/src/components/market/marketPage.js",[],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/account/accountPage.js",["133"],"/Users/mac/Desktop/hackathon/bsc-coupon/src/components/CreateNft.js",["134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"143","line":7,"column":3,"nodeType":"141","messageId":"142","endLine":7,"endColumn":9},{"ruleId":"139","severity":1,"message":"144","line":13,"column":10,"nodeType":"141","messageId":"142","endLine":13,"endColumn":14},{"ruleId":"139","severity":1,"message":"145","line":17,"column":8,"nodeType":"141","messageId":"142","endLine":17,"endColumn":18},{"ruleId":"139","severity":1,"message":"146","line":11,"column":26,"nodeType":"141","messageId":"142","endLine":11,"endColumn":31},{"ruleId":"147","severity":1,"message":"148","line":88,"column":34,"nodeType":"149","messageId":"150","endLine":92,"endColumn":18,"fix":"151"},{"ruleId":"139","severity":1,"message":"146","line":3,"column":26,"nodeType":"141","messageId":"142","endLine":3,"endColumn":31},{"ruleId":"139","severity":1,"message":"146","line":1,"column":15,"nodeType":"141","messageId":"142","endLine":1,"endColumn":20},{"ruleId":"139","severity":1,"message":"152","line":6,"column":9,"nodeType":"141","messageId":"142","endLine":6,"endColumn":15},{"ruleId":"139","severity":1,"message":"153","line":1,"column":10,"nodeType":"141","messageId":"142","endLine":1,"endColumn":13},{"ruleId":"139","severity":1,"message":"154","line":1,"column":22,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"155","line":2,"column":17,"nodeType":"141","messageId":"142","endLine":2,"endColumn":26},{"ruleId":"139","severity":1,"message":"156","line":43,"column":10,"nodeType":"141","messageId":"142","endLine":43,"endColumn":16},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Figure' is defined but never used.","'time' is defined but never used.","'MusicBlock' is defined but never used.","'Image' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"159","text":"160"},"'imgSrc' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'useEffect' is defined but never used.","'tokens' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2322,2322]," rel=\"noreferrer\""]